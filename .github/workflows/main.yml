name: Compile Game Files

on:
  push:
    branches:
      - main # Trigger on any push to the main branch
      
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up .NET
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0

      # Step 3: Restore dependencies and build each game
      - name: Build game DLLs
        run: |
          mkdir -p ./ADS-Games/GameArtifacts # Create the directory if it doesn't exist
          ls ./ADS-Games/
          for project in $(find ./ADS-Games/Games -mindepth 2 -maxdepth 2 -type f -name '*.csproj'); do
            # Extract the name of the project folder (immediate parent directory)
            game_name=$(basename "$(dirname "$project")")
            
            echo "Building project: $project into GameArtifacts/$game_name"
            echo "$game_name"
            
            # Build the project and output to ADS-Games/GameArtifacts/<game_name>
            dotnet build "$project" --configuration Release --output "./ADS-Games/GameArtifacts/$game_name"
          done

      # Step 4: Upload compiled DLLs as artifacts
      - name: Upload DLLs as GitHub artifacts
        uses: actions/upload-artifact@v3
        with:
          name: compiled-dlls
          path: ./ADS-Games/GameArtifacts/** # Upload all DLLs in the GameArtifacts directory
      - name: Debug repository structure
        run: ls -R
    
